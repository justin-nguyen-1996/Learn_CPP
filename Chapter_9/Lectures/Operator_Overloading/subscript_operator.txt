/*
 * Author:  Justin Nguyen
 * Created: 8/2/2016
 */
 
1. Subscript Operator
    --> []
    --> int& Intlist::operator[] (const int index) {
            return m_list[index]
        }
    --> lets you easily get AND set members
    --> make sure to return a reference
        --> else the following statement doesn't compile
            list[2] = 3;
                --> say m_list[2] = 6
                --> the code produces 6 = 3 // makes no sense
                --> supposed to be list.m_list[2] = 3
        --> left operand has to be an l-value
        
2. Const Version
    --> const int& Intlist::operator[] (const int index) const {
            return m_list[index]
        }
        
3. Bounds Checking
    --> #include <cassert>
        int& Intlist::operator[] (const int index) {
            assert(index >= 0   &&   index < MAX_INDEX);
            return m_list[index]
        }
    
