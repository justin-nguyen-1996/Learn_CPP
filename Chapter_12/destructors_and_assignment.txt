/*
 * Author:  Justin Nguyen
 * Created: 8/14/2016
 */

1. Virtual Destructors
	--> always make destructors virtual if using inheritance

2. Overriding Virtualization
	--> generally not a good idea
	--> if want to call base class's version and its a virtual function,
		just use the scope resolution operator (::)
	--> example:
		Derived derived;
		Base& base = derived;
		base.Base::GetName();

3. Why not always use virtualization?
	--> rather inefficient
	--> resolving a call to a virtual function 
		--> has to walk down the recursion tree by following 
			pointers to find the most derived version of that function
	--> the compiler has to allocate an extra pointer for each
		class object that has at least one virtual function

	
