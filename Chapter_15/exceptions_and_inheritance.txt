/*
 * Author:  Justin Nguyen
 * Created: 8/19/2016
 */
 
1. Ordering of the catch blocks with inheritance
    --> can throw classes so inheritance with exceptions makes sense
    --> handlers for derived classes should be put before those of base classes
    --> put the more specific handlers first 
        (same as for catch-all handlers)
    --> otherwise the base class handler will 
        execute instead of the derived class handler
        --> this happens because the compiler checks
            for exceptions sequentially
            
2. std::exception
    --> the standard library has its own exception class called std::exception
    --> many other exceptions are derived from std::exception
    --> allows us to use specific handlers for specific derived exception classes, 
        or to use base class handlers to catch everything else
    --> example:
    
        try {
            // code using standard library goes here
        } catch (std::bad_alloc &cException) {
            cerr << "You ran out of memory!" << endl;
        } catch (std::exception &cException) {
            cerr << "Standard exception: " << cException.what() << endl;
        }

