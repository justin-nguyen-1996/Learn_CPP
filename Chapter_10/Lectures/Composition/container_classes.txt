/*
 * Author:  Justin Nguyen
 * Created: 8/6/2016
 */

1. Container Classes
    --> classes designed to hold/organize
        instances of another class
    --> provide additional benefits (convenience and safety)

2. Types of Containers
    --> value containers
        --> compositions that store copies of the objects they are holding 
            (and thus are responsible for creating and destroying those copies)
    --> reference containers
        --> aggregations that store pointers or references to other objects 
            (and thus are not responsible for creation or destruction of those objects)
            
3.  Implementing the std::array container
        
    class IntArray {
        private:
            int size = 0;
            int* data = 0;
        public:
            IntArray() {}
            IntArray(int my_size, int my_data) 
                : size(my_size), data(my_data) {}
            
            int getSize() { return size; }
            int getData() { return data; }
    
    };
            
