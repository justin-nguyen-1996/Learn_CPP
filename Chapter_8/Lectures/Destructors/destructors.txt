/*
    Author:  Justin Nguyen
    Created: 7/11/2016
*/

1. Purpose of Destructors
    --> clean up objects just as they are going out of scope
    --> good for when an object is holding any resources
        (dynamic memory, or a file or database handle)
        (or if maintenance needs to be done before the object is destroyed)

2. Destructor Naming Rules
    --> must have the same name as the class PRECEDED by a tilde (~)
    --> can only have one destructor per class
    
3. Delete
    --> delete and delete[] both call the class's destructor

4. Warning about exit()
    --> exit() terminates the program without calling any destructors
    --> this could produce memory leaks and other problems
        (say if you rely on your destructor to write to a log file)
    --> assert() is basically an if-statement combined with exit()
        (meaning it won't call any destructors either)
    
    
