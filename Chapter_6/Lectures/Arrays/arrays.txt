/*
    Author:  Justin Nguyen
    Created: 6/10/2016
*/

1. Fixed Arrays
    --> array size must be a compile-time constant (not a run-time constant)
    --> int array[4]; // works
    --> int x = 4; int array[x]; // does not work
    
2. Initializing Arrays
    --> all elements not specified in the initializer list are set to zero
    --> int array[4] = {} // array = {0, 0, 0, 0}
    
3. Omitted Array Size
    --> int array[] = {1, 2, 3, 4}; // compiler knows array size, works
    
4. Number of Array Elements Trick
    --> int array[4];
    --> int array_size = sizeof(array) / sizeof(array[0]);
    
5. Passing Arrays as Arguments
    --> parameter name can have an index number, doesn't mean anything
        --> int param_example (int array[5])
        --> int param_example (int array[])
        --> int param_example (int* array)
        --> all mean the same thing
        
