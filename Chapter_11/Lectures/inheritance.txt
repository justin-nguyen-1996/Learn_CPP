/*
 * Author:  Justin Nguyen
 * Created: 8/9/2016
 */

1. Inheritance Definition
	--> as opposed to composition where objects have a "has-a" relationship
	--> inheritance involves objects that have a "are-a" relationship

	--> Cars have a wheel, tires, etc.
	--> Apples and bananas are a fruit

2. Inheritance Properties
	--> by default children inherit all of the parent's attributes
	--> but can: 
		--> redefine inherited properties
		--> add new properties
		--> hide some of the inherited properties

3. Why we use inheritance
	--> instead of manually copying & pasting then remodifying the code
	--> we can just inherit the class then add/hide features as needed
	--> instead of redefining everything, just modify what changed
	--> changing the base class will propogate changes to all children
	--> inherit the member functions and the member variables
		--> making changes becomes both intuitive and low-maintenance

4. Order of Inheritance Construction
	--> the base class is constructed first, then the derived classes
	--> make sense too
		--> a child cannot exist without a parent
		--> each derived class likely uses the 
			variables and functions created in the base class
		--> so we need to create the parent class for these to exist first


