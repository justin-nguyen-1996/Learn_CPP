/*
 * Author:  Justin Nguyen
 * Created: 8/12/2016
 */
 
1. Virtual Base Classes
    --> a way of preventing multiple instances of a class
    --> use the keyword virtual to have the base class be shared
    
2. Example

    class PoweredDevice
    class Scanner: public PoweredDevice
    class Printer: public PoweredDevice
    class Copier: public Scanner, public Printer
    Copier(int nScanner, int nPrinter, int nPower)
        : Scanner(nScanner, nPower), Printer(nPrinter, nPower) {}
    
    class PoweredDevice
    class Scanner: virtual public PoweredDevice
    class Printer: virtual public PoweredDevice
    class Copier: public Scanner, public Printer
    Copier(int nScanner, int nPrinter, int nPower)
        : Scanner(nScanner, nPower), 
          Printer(nPrinter, nPower), PoweredDevice(nPower) {}
          
3. Things to Note
    --> the most derived class constructs the virtual base class
    --> virtual base classes are created before non-virtual base classes, 
        which ensures all bases get created before their derived classes
    --> if we create an instance of Copier, Printer and Scanner's 
        calls to construct PoweredDevice are ignored because 
        Copier is responsible for creating the PoweredDevice
    --> if we were create an instance of Scanner or Printer, however, 
        the virtual keyword is ignored, those constructor calls would be used, 
        and normal inheritance rules apply.

