/*
 * Author:  Justin Nguyen
 * Created: 8/11/2016
 */

1. Multiple Inheritance
    --> a single class can inherit from multiple classes
    --> class Teacher: public Person, public Employee {};
    
2. Problems with multiple inheritance
    --> naming conflicts
        --> class WirelessAdaptor: public USBDevice, public NetworkDevice {};
        --> WirelessAdaptor c54G(5442, 181742); 
            cout << c54G.GetID();
        --> but what if USBDevice and NetworkDevice both have a GetID method?
            --> use explicit call --> cout << c54G.USBDevice::GetID();
        --> can get way out of hand really quickly
    
    --> Diamond Problem
        --> class D inherits from class's B & C,
            but classes B & C inherit from class A
        --> If B & C overload a function inherited from class A and
            class D does not overload that function,
            --> from which class does class D inherit?
        --> ambiguous

3. Advice on multiple inheritance
    --> generally considered to be more trouble than they're worth
    --> many languages such as Java only have single inheritance
        --> though Java interfaces do have multiple inheritance
    --> though cin and cout are implemented using multiple inheritance

