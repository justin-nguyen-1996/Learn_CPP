!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACE	Chapter_6/Quizzes/Quiz_5/card.h	/^	ACE$/;"	e	enum:CardRank
ACE	Chapter_8/Quizzes/Blackjack/Card.h	/^            JACK, QUEEN, KING, ACE,$/;"	e	enum:Card::CardValue
ADD_H	Chapter_1/Lectures/Headers/add.h	2;"	d
ARROWS	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^		ARROWS$/;"	e	enum:ItemTypes::ItemTypes	file:
Animal_t	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^enum class Animal_t {$/;"	c
BadInput	Chapter_7/Lectures/Function_Pointers/Calculator_Program/BadInput.h	/^enum class BadInput {$/;"	c
Ball	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^		Ball (const std::string &color = "yellow", double radius = 4.0) {$/;"	f	class:Ball
Ball	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^		Ball (double radius) {$/;"	f	class:Ball
Ball	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^class Ball {$/;"	c	file:
CARD_H	Chapter_8/Quizzes/Blackjack/Card.h	7;"	d
CAT	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^        CAT,$/;"	m	class:Animal_t
CC	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Lectures/For_Each_Loops/Example_Program/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Lectures/Sorting/Bubble_Sort/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Lectures/Sorting/Selection_Sort/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Quizzes/Quiz_1/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Quizzes/Quiz_2/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Quizzes/Quiz_3/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Quizzes/Quiz_4/Makefile	/^CC = g++$/;"	m
CC	Chapter_6/Quizzes/Quiz_5/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Function_Pointers/Calculator_Program/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/Makefile	/^CC = g++$/;"	m
CC	Chapter_8/Lectures/Access_Specifiers/Stack/Makefile	/^CC = g++$/;"	m
CC	Chapter_8/Quizzes/Blackjack/Makefile	/^CC = g++$/;"	m
CC	Chapter_8/Quizzes/Monster/Makefile	/^CC = g++$/;"	m
CC	Chapter_8/Quizzes/Point2d/Makefile	/^CC = g++$/;"	m
CC	Chapter_9/Quizzes/GradeMap/Makefile	/^CC = g++$/;"	m
CC	Chapter_9/Quizzes/MyString/Makefile	/^CC = g++$/;"	m
CFLAGS	Chapter_1/Lectures/Headers/Makefile	/^CFLAGS = -Wall$/;"	m
CFLAGS	Chapter_1/Lectures/Hello_World/Makefile	/^CFLAGS = -Wall$/;"	m
CFLAGS	Chapter_1/Lectures/Simple_IO/Makefile	/^CFLAGS = -Wall$/;"	m
CFLAGS	Chapter_1/Quizzes/Question_1/Makefile	/^CFLAGS = -Wall -g$/;"	m
CFLAGS	Chapter_1/Quizzes/Question_2/Makefile	/^CFLAGS = -Wall -g$/;"	m
CFLAGS	Chapter_2/Quizzes/Question_3/Makefile	/^CFLAGS = -Wall -g$/;"	m
CFLAGS	Chapter_2/Quizzes/Question_4/Makefile	/^CFLAGS = -Wall -g -std=c++11$/;"	m
CFLAGS	Chapter_4/Lectures/Scope_Duration_Linkage/Makefile	/^CFLAGS = -Wall -g -std=c++11$/;"	m
CFLAGS	Chapter_4/Lectures/Strings/Makefile	/^CFLAGS = -Wall -g$/;"	m
CFLAGS	Chapter_4/Lectures/Structs/Makefile	/^CFLAGS = -Wall -g -std=c++11$/;"	m
CFLAGS	Chapter_4/Quizzes/Makefile	/^CFLAGS = -Wall -g -std=c++11$/;"	m
CFLAGS	Chapter_5/Lectures/Enums_Switches/Makefile	/^CFLAGS = -Wall -g$/;"	m
CFLAGS	Chapter_5/Quizzes/Makefile	/^CFLAGS = -Wall -g -std=c++0x$/;"	m
CFLAGS	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Lectures/For_Each_Loops/Example_Program/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Lectures/Sorting/Bubble_Sort/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Lectures/Sorting/Selection_Sort/Makefile	/^CFLAGS = -Wall -g -std=c++1z$/;"	m
CFLAGS	Chapter_6/Quizzes/Quiz_1/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Quizzes/Quiz_2/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Quizzes/Quiz_3/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Quizzes/Quiz_4/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_6/Quizzes/Quiz_5/Makefile	/^CFLAGS = -g -Wall -std=c++1z$/;"	m
CFLAGS	Chapter_7/Lectures/Function_Pointers/Calculator_Program/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/Makefile	/^CFLAGS = -g -Wall -std=c++11$/;"	m
CFLAGS	Chapter_8/Lectures/Access_Specifiers/Stack/Makefile	/^CFLAGS = -Wall -g -std=c++11$/;"	m
CFLAGS	Chapter_8/Quizzes/Blackjack/Makefile	/^CFLAGS = -Wall -g -std=gnu++0x$/;"	m
CFLAGS	Chapter_8/Quizzes/Monster/Makefile	/^CFLAGS = -Wall -g -std=gnu++0x$/;"	m
CFLAGS	Chapter_8/Quizzes/Point2d/Makefile	/^CFLAGS = -Wall -g -std=gnu++0x$/;"	m
CFLAGS	Chapter_9/Quizzes/GradeMap/Makefile	/^CFLAGS = -Wall -g -std=gnu++0x$/;"	m
CFLAGS	Chapter_9/Quizzes/MyString/Makefile	/^CFLAGS = -Wall -g -std=gnu++0x$/;"	m
CHICKEN	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^        CHICKEN,$/;"	m	class:Animal_t
CLUBS	Chapter_6/Quizzes/Quiz_5/card.h	/^	CLUBS,$/;"	e	enum:CardSuit
CLUBS	Chapter_8/Quizzes/Blackjack/Card.h	/^            CLUBS, DIAMONDS, HEARTS, SPADES,$/;"	e	enum:Card::CardSuit
CONSTANTS_H	Chapter_2/Quizzes/Question_4/constants.h	2;"	d
CONSTANTS_H	Chapter_4/Lectures/Scope_Duration_Linkage/constants.h	7;"	d
CORRECT	Chapter_5/Quizzes/hi_lo_enums.h	/^        CORRECT,$/;"	m	class:Guess_Status
CPPFLAGS	Chapter_1/Quizzes/Question_1/Makefile	/^CPPFLAGS = -Wall -g$/;"	m
CPPFLAGS	Chapter_1/Quizzes/Question_2/Makefile	/^CPPFLAGS = -Wall -g$/;"	m
CPPFLAGS	Chapter_2/Quizzes/Question_3/Makefile	/^CPPFLAGS = -Wall -g$/;"	m
CPPFLAGS	Chapter_2/Quizzes/Question_4/Makefile	/^CPPFLAGS = -Wall -g -std=c++11$/;"	m
CPPFLAGS	Chapter_4/Lectures/Scope_Duration_Linkage/Makefile	/^CPPFLAGS = -Wall -g -std=c++11$/;"	m
CPPFLAGS	Chapter_4/Lectures/Strings/Makefile	/^CPPFLAGS = -Wall -g$/;"	m
CPPFLAGS	Chapter_4/Lectures/Structs/Makefile	/^CPPFLAGS = -Wall -g -std=c++11$/;"	m
CPPFLAGS	Chapter_4/Quizzes/Makefile	/^CPPFLAGS = -Wall -g -std=c++11$/;"	m
CPPFLAGS	Chapter_5/Lectures/Enums_Switches/Makefile	/^CPPFLAGS = -Wall -g$/;"	m
CPPFLAGS	Chapter_5/Quizzes/Makefile	/^CPPFLAGS = -Wall -g -std=c++0x$/;"	m
CPPFLAGS	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Lectures/For_Each_Loops/Example_Program/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Lectures/Sorting/Bubble_Sort/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Lectures/Sorting/Selection_Sort/Makefile	/^CPPFLAGS = -Wall -g -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Quizzes/Quiz_1/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Quizzes/Quiz_2/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Quizzes/Quiz_3/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Quizzes/Quiz_4/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_6/Quizzes/Quiz_5/Makefile	/^CPPFLAGS = -g -Wall -std=c++1z$/;"	m
CPPFLAGS	Chapter_7/Lectures/Function_Pointers/Calculator_Program/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/Makefile	/^CPPFLAGS = -g -Wall -std=c++11$/;"	m
CPPFLAGS	Chapter_8/Lectures/Access_Specifiers/Stack/Makefile	/^CPPFLAGS = -Wall -g -std=c++11 $/;"	m
CPPFLAGS	Chapter_8/Quizzes/Blackjack/Makefile	/^CPPFLAGS = -Wall -g -std=gnu++0x$/;"	m
CPPFLAGS	Chapter_8/Quizzes/Monster/Makefile	/^CPPFLAGS = -Wall -g -std=gnu++0x$/;"	m
CPPFLAGS	Chapter_8/Quizzes/Point2d/Makefile	/^CPPFLAGS = -Wall -g -std=gnu++0x$/;"	m
CPPFLAGS	Chapter_9/Quizzes/GradeMap/Makefile	/^CPPFLAGS = -Wall -g -std=gnu++0x$/;"	m
CPPFLAGS	Chapter_9/Quizzes/MyString/Makefile	/^CPPFLAGS = -Wall -g -std=gnu++0x$/;"	m
Card	Chapter_6/Quizzes/Quiz_5/card.h	/^struct Card {$/;"	s
Card	Chapter_8/Quizzes/Blackjack/Card.h	/^        Card() {}$/;"	f	class:Card
Card	Chapter_8/Quizzes/Blackjack/Card.h	/^        Card(CardSuit suit, CardValue value) $/;"	f	class:Card
Card	Chapter_8/Quizzes/Blackjack/Card.h	/^        Card(CardValue value, CardSuit suit) $/;"	f	class:Card
Card	Chapter_8/Quizzes/Blackjack/Card.h	/^class Card {$/;"	c
CardRank	Chapter_6/Quizzes/Quiz_5/card.h	/^enum CardRank {$/;"	g
CardSuit	Chapter_6/Quizzes/Quiz_5/card.h	/^enum CardSuit {$/;"	g
CardSuit	Chapter_8/Quizzes/Blackjack/Card.h	/^        enum CardSuit {$/;"	g	class:Card
CardValue	Chapter_8/Quizzes/Blackjack/Card.h	/^        enum CardValue {$/;"	g	class:Card
Constants	Chapter_4/Lectures/Scope_Duration_Linkage/constants.cpp	/^namespace Constants {$/;"	n	file:
Constants	Chapter_4/Lectures/Scope_Duration_Linkage/constants.h	/^namespace Constants {$/;"	n
DECK_H	Chapter_8/Quizzes/Blackjack/Deck.h	7;"	d
DEFAULT_SUIT	Chapter_8/Quizzes/Blackjack/Card.h	/^            DEFAULT_SUIT$/;"	e	enum:Card::CardSuit
DEFAULT_VALUE	Chapter_8/Quizzes/Blackjack/Card.h	/^            DEFAULT_VALUE$/;"	e	enum:Card::CardValue
DIAMONDS	Chapter_6/Quizzes/Quiz_5/card.h	/^	DIAMONDS,$/;"	e	enum:CardSuit
DIAMONDS	Chapter_8/Quizzes/Blackjack/Card.h	/^            CLUBS, DIAMONDS, HEARTS, SPADES,$/;"	e	enum:Card::CardSuit
DOG	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^        DOG,$/;"	m	class:Animal_t
DRAGON	Chapter_4/Quizzes/monster.h	/^	DRAGON,$/;"	m	class:Monster_t
Deck	Chapter_8/Quizzes/Blackjack/Deck.h	/^        Deck() {$/;"	f	class:Deck
Deck	Chapter_8/Quizzes/Blackjack/Deck.h	/^class Deck {$/;"	c
Dragon	Chapter_8/Quizzes/Monster/Monster.h	/^            Dragon,$/;"	e	enum:Monster::MonsterType
EIGHT	Chapter_6/Quizzes/Quiz_5/card.h	/^	EIGHT,$/;"	e	enum:CardRank
EIGHT	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
EXE	Chapter_5/Quizzes/Makefile	/^EXE = hi_lo$/;"	m
EXE	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/Makefile	/^EXE = sort$/;"	m
EXE	Chapter_6/Lectures/For_Each_Loops/Example_Program/Makefile	/^EXE = for_each$/;"	m
EXE	Chapter_6/Lectures/Sorting/Bubble_Sort/Makefile	/^EXE = bub_sort$/;"	m
EXE	Chapter_6/Lectures/Sorting/Selection_Sort/Makefile	/^EXE = sel_sort$/;"	m
EXE	Chapter_6/Quizzes/Quiz_1/Makefile	/^EXE = quiz_1$/;"	m
EXE	Chapter_6/Quizzes/Quiz_2/Makefile	/^EXE = quiz_2$/;"	m
EXE	Chapter_6/Quizzes/Quiz_3/Makefile	/^EXE = quiz_3$/;"	m
EXE	Chapter_6/Quizzes/Quiz_4/Makefile	/^EXE = quiz_4$/;"	m
EXE	Chapter_6/Quizzes/Quiz_5/Makefile	/^EXE = quiz_5$/;"	m
EXE	Chapter_7/Lectures/Function_Pointers/Calculator_Program/Makefile	/^EXE = fxn_ptrs$/;"	m
EXE	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/Makefile	/^EXE = factorial_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/Makefile	/^EXE = factorial_recursive$/;"	m
EXE	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/Makefile	/^EXE = fibonacci_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/Makefile	/^EXE = fibonacci_recursive$/;"	m
EXE	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/Makefile	/^EXE = is_palindrome_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/Makefile	/^EXE = is_palindrome_recursive$/;"	m
EXE	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/Makefile	/^EXE = reverse_digits_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/Makefile	/^EXE = reverse_digits_recursive$/;"	m
EXE	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/Makefile	/^EXE = reverse_string_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/Makefile	/^EXE = reverse_string_recursive$/;"	m
EXE	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/Makefile	/^EXE = sum_of_digits_iterative$/;"	m
EXE	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/Makefile	/^EXE = sum_of_digits_recursive$/;"	m
EXE	Chapter_8/Lectures/Access_Specifiers/Stack/Makefile	/^EXE = STACK$/;"	m
EXE	Chapter_8/Quizzes/Blackjack/Makefile	/^EXE = MAIN$/;"	m
EXE	Chapter_8/Quizzes/Monster/Makefile	/^EXE = MAIN$/;"	m
EXE	Chapter_8/Quizzes/Point2d/Makefile	/^EXE = MAIN$/;"	m
EXE	Chapter_9/Quizzes/GradeMap/Makefile	/^EXE = MAIN$/;"	m
EXE	Chapter_9/Quizzes/MyString/Makefile	/^EXE = MAIN$/;"	m
ErrorType	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^enum class ErrorType {$/;"	c	file:
ErrorType	Chapter_6/Quizzes/Quiz_2/error_type.h	/^enum class ErrorType {$/;"	c
FIVE	Chapter_6/Quizzes/Quiz_5/card.h	/^	FIVE,$/;"	e	enum:CardRank
FIVE	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
FOUR	Chapter_6/Quizzes/Quiz_5/card.h	/^	FOUR,$/;"	e	enum:CardRank
FOUR	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
Fraction	Chapter_4/Lectures/Structs/struct_defs.h	/^struct Fraction {$/;"	s
GIANT_SPIDER	Chapter_4/Quizzes/monster.h	/^	GIANT_SPIDER,$/;"	m	class:Monster_t
GOAT	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^        GOAT,$/;"	m	class:Animal_t
GRADE_MAP_H	Chapter_9/Quizzes/GradeMap/GradeMap.h	7;"	d
GRAVITY	Chapter_2/Quizzes/Question_4/constants.h	/^	const double GRAVITY = 9.8;$/;"	m	namespace:constants
GUESS_BASE	Chapter_5/Quizzes/hi_lo_constants.h	/^const int GUESS_BASE = 1;$/;"	v
GUESS_RANGE	Chapter_5/Quizzes/hi_lo_constants.h	/^const int GUESS_RANGE = 100;$/;"	v
Goblin	Chapter_8/Quizzes/Monster/Monster.h	/^            Goblin,$/;"	e	enum:Monster::MonsterType
GradeMap	Chapter_9/Quizzes/GradeMap/GradeMap.h	/^        GradeMap() {}$/;"	f	class:GradeMap
GradeMap	Chapter_9/Quizzes/GradeMap/GradeMap.h	/^class GradeMap {$/;"	c
Guess_Status	Chapter_5/Quizzes/hi_lo_enums.h	/^enum class Guess_Status {$/;"	c
HEALTH_POTIONS	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^		HEALTH_POTIONS,$/;"	e	enum:ItemTypes::ItemTypes	file:
HEARTS	Chapter_6/Quizzes/Quiz_5/card.h	/^	HEARTS,$/;"	e	enum:CardSuit
HEARTS	Chapter_8/Quizzes/Blackjack/Card.h	/^            CLUBS, DIAMONDS, HEARTS, SPADES,$/;"	e	enum:Card::CardSuit
HIGH	Chapter_5/Quizzes/hi_lo_enums.h	/^        HIGH,$/;"	m	class:Guess_Status
HIT	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^	HIT,$/;"	m	class:PlayerChoice	file:
INCORRECT	Chapter_5/Quizzes/hi_lo_enums.h	/^        INCORRECT,$/;"	m	class:Guess_Status
ItemTypes	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^	enum ItemTypes {$/;"	g	namespace:ItemTypes	file:
ItemTypes	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^namespace ItemTypes {$/;"	n	file:
JACK	Chapter_6/Quizzes/Quiz_5/card.h	/^	JACK,$/;"	e	enum:CardRank
JACK	Chapter_8/Quizzes/Blackjack/Card.h	/^            JACK, QUEEN, KING, ACE,$/;"	e	enum:Card::CardValue
KING	Chapter_6/Quizzes/Quiz_5/card.h	/^	KING,$/;"	e	enum:CardRank
KING	Chapter_8/Quizzes/Blackjack/Card.h	/^            JACK, QUEEN, KING, ACE,$/;"	e	enum:Card::CardValue
LOW	Chapter_5/Quizzes/hi_lo_enums.h	/^        LOW,$/;"	m	class:Guess_Status
MAX_CARD_SUITS	Chapter_8/Quizzes/Blackjack/Card.h	/^            MAX_CARD_SUITS,$/;"	e	enum:Card::CardSuit
MAX_CARD_VALUES	Chapter_8/Quizzes/Blackjack/Card.h	/^            MAX_CARD_VALUES,$/;"	e	enum:Card::CardValue
MAX_GUESSES	Chapter_5/Quizzes/hi_lo_constants.h	/^const int MAX_GUESSES = 7;$/;"	v
MAX_MONSTER_TYPES	Chapter_8/Quizzes/Monster/Monster.h	/^            MAX_MONSTER_TYPES,$/;"	e	enum:Monster::MonsterType
MONSTER_GENERATOR_H	Chapter_8/Quizzes/Monster/MonsterGenerator.h	7;"	d
MONSTER_H	Chapter_4/Quizzes/monster.h	7;"	d
MONSTER_H	Chapter_8/Quizzes/Monster/Monster.h	7;"	d
MY_STRING_H	Chapter_9/Quizzes/MyString/MyString.h	7;"	d
Monster	Chapter_4/Quizzes/monster.h	/^struct Monster {$/;"	s
Monster	Chapter_8/Quizzes/Monster/Monster.h	/^        Monster() {}$/;"	f	class:Monster
Monster	Chapter_8/Quizzes/Monster/Monster.h	/^        Monster(MonsterType type, std::string name, std::string roar, int hp)$/;"	f	class:Monster
Monster	Chapter_8/Quizzes/Monster/Monster.h	/^class Monster {$/;"	c
MonsterGenerator	Chapter_8/Quizzes/Monster/MonsterGenerator.h	/^class MonsterGenerator {$/;"	c
MonsterType	Chapter_8/Quizzes/Monster/Monster.h	/^        enum MonsterType {$/;"	g	class:Monster
Monster_t	Chapter_4/Quizzes/monster.h	/^enum class Monster_t {$/;"	c
MyString	Chapter_9/Quizzes/MyString/MyString.h	/^        MyString() {}$/;"	f	class:MyString
MyString	Chapter_9/Quizzes/MyString/MyString.h	/^        MyString(const std::string str) : m_string(str) {}$/;"	f	class:MyString
MyString	Chapter_9/Quizzes/MyString/MyString.h	/^class MyString {$/;"	c
NINE	Chapter_6/Quizzes/Quiz_5/card.h	/^	NINE,$/;"	e	enum:CardRank
NINE	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
NO_TYPE	Chapter_8/Quizzes/Monster/Monster.h	/^            NO_TYPE$/;"	e	enum:Monster::MonsterType
OBJS	Chapter_5/Quizzes/Makefile	/^OBJS = hi_lo_game.o$/;"	m
OBJS	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/Makefile	/^OBJS = sort_sizeless_list.o$/;"	m
OBJS	Chapter_6/Lectures/For_Each_Loops/Example_Program/Makefile	/^OBJS = for_each_example.o$/;"	m
OBJS	Chapter_6/Lectures/Sorting/Bubble_Sort/Makefile	/^OBJS = bubble_sort.o$/;"	m
OBJS	Chapter_6/Lectures/Sorting/Selection_Sort/Makefile	/^OBJS = selection_sort.o$/;"	m
OBJS	Chapter_6/Quizzes/Quiz_1/Makefile	/^OBJS = quiz_1.o$/;"	m
OBJS	Chapter_6/Quizzes/Quiz_2/Makefile	/^OBJS = quiz_2.o$/;"	m
OBJS	Chapter_6/Quizzes/Quiz_3/Makefile	/^OBJS = quiz_3.o$/;"	m
OBJS	Chapter_6/Quizzes/Quiz_4/Makefile	/^OBJS = quiz_4.o$/;"	m
OBJS	Chapter_6/Quizzes/Quiz_5/Makefile	/^OBJS = quiz_5.o$/;"	m
OBJS	Chapter_7/Lectures/Function_Pointers/Calculator_Program/Makefile	/^OBJS = function_pointers.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/Makefile	/^OBJS = factorial_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/Makefile	/^OBJS = factorial_recursive.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/Makefile	/^OBJS = fibonacci_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/Makefile	/^OBJS = fibonacci_recursive.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/Makefile	/^OBJS = is_palindrome_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/Makefile	/^OBJS = is_palindrome_recursive.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/Makefile	/^OBJS = reverse_digits_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/Makefile	/^OBJS = reverse_digits_recursive.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/Makefile	/^OBJS = reverse_string_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/Makefile	/^OBJS = reverse_string_recursive.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/Makefile	/^OBJS = sum_of_digits_iterative.o$/;"	m
OBJS	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/Makefile	/^OBJS = sum_of_digits_recursive.o$/;"	m
OBJS	Chapter_8/Lectures/Access_Specifiers/Stack/Makefile	/^OBJS = stack.o$/;"	m
OBJS	Chapter_8/Quizzes/Blackjack/Makefile	/^OBJS = $(patsubst %.cpp,%.o,$(SRCS))$/;"	m
OBJS	Chapter_8/Quizzes/Monster/Makefile	/^OBJS = $(patsubst %.cpp,%.o,$(SRCS))$/;"	m
OBJS	Chapter_8/Quizzes/Point2d/Makefile	/^OBJS = $(patsubst %.cpp,%.o,$(SRCS))$/;"	m
OBJS	Chapter_9/Quizzes/GradeMap/Makefile	/^OBJS = $(patsubst %.cpp,%.o,$(SRCS))$/;"	m
OBJS	Chapter_9/Quizzes/MyString/Makefile	/^OBJS = $(patsubst %.cpp,%.o,$(SRCS))$/;"	m
OGRE	Chapter_4/Quizzes/monster.h	/^	OGRE,$/;"	m	class:Monster_t
ORC	Chapter_4/Quizzes/monster.h	/^	ORC,$/;"	m	class:Monster_t
Ogre	Chapter_8/Quizzes/Monster/Monster.h	/^            Ogre,$/;"	e	enum:Monster::MonsterType
Orc	Chapter_8/Quizzes/Monster/Monster.h	/^            Orc,$/;"	e	enum:Monster::MonsterType
PIG	Chapter_5/Lectures/Enums_Switches/enums_switches.h	/^        PIG,$/;"	m	class:Animal_t
POINT2D_H	Chapter_8/Quizzes/Point2d/Point2d.h	7;"	d
PlayerChoice	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^enum class PlayerChoice {$/;"	c	file:
Point2d	Chapter_8/Quizzes/Point2d/Point2d.h	/^		Point2d() {}$/;"	f	class:Point2d
Point2d	Chapter_8/Quizzes/Point2d/Point2d.h	/^		Point2d(double x, double y) : m_x(x), m_y(y) {}$/;"	f	class:Point2d
Point2d	Chapter_8/Quizzes/Point2d/Point2d.h	/^class Point2d {$/;"	c
Point3d	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^class Point3d {$/;"	c	file:
QUEEN	Chapter_6/Quizzes/Quiz_5/card.h	/^	QUEEN,$/;"	e	enum:CardRank
QUEEN	Chapter_8/Quizzes/Blackjack/Card.h	/^            JACK, QUEEN, KING, ACE,$/;"	e	enum:Card::CardValue
QUESTION_1	Chapter_1/Quizzes/Question_1/question_1.h	2;"	d
QUESTION_1	Chapter_1/Quizzes/Question_2/question_2.h	2;"	d
QUIZ_2	Chapter_6/Quizzes/Quiz_2/quiz_2.h	2;"	d
RGBA	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		RGBA(uint8_t red = 0, uint8_t green = 0, uint8_t blue = 0, uint8_t alpha = 255)$/;"	f	class:RGBA
RGBA	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^class RGBA {$/;"	c	file:
RM	Chapter_8/Quizzes/Blackjack/Makefile	/^RM = rm$/;"	m
RM	Chapter_8/Quizzes/Monster/Makefile	/^RM = rm$/;"	m
RM	Chapter_9/Quizzes/GradeMap/Makefile	/^RM = rm$/;"	m
RM	Chapter_9/Quizzes/MyString/Makefile	/^RM = rm$/;"	m
SEVEN	Chapter_6/Quizzes/Quiz_5/card.h	/^	SEVEN,$/;"	e	enum:CardRank
SEVEN	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
SIX	Chapter_6/Quizzes/Quiz_5/card.h	/^	SIX,$/;"	e	enum:CardRank
SIX	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
SPADES	Chapter_6/Quizzes/Quiz_5/card.h	/^	SPADES$/;"	e	enum:CardSuit
SPADES	Chapter_8/Quizzes/Blackjack/Card.h	/^            CLUBS, DIAMONDS, HEARTS, SPADES,$/;"	e	enum:Card::CardSuit
SRCS	Chapter_8/Quizzes/Blackjack/Makefile	/^SRCS = $(shell find . -name "*.cpp")$/;"	m
SRCS	Chapter_8/Quizzes/Monster/Makefile	/^SRCS = $(shell find . -name "*.cpp")$/;"	m
SRCS	Chapter_8/Quizzes/Point2d/Makefile	/^SRCS = $(shell find . -name "*.cpp")$/;"	m
SRCS	Chapter_9/Quizzes/GradeMap/Makefile	/^SRCS = $(shell find . -name "*.cpp")$/;"	m
SRCS	Chapter_9/Quizzes/MyString/Makefile	/^SRCS = $(shell find . -name "*.cpp")$/;"	m
STAND	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^	STAND,$/;"	m	class:PlayerChoice	file:
STRUCT_DEFS_H	Chapter_4/Lectures/Structs/struct_defs.h	7;"	d
STUDENT_GRADES_H	Chapter_9/Quizzes/GradeMap/StudentGrades.h	7;"	d
SUCCESS	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^	SUCCESS,$/;"	m	class:ErrorType	file:
SUCCESS	Chapter_6/Quizzes/Quiz_2/error_type.h	/^	SUCCESS,$/;"	m	class:ErrorType
SUCCESS	Chapter_7/Lectures/Function_Pointers/Calculator_Program/BadInput.h	/^	SUCCESS,$/;"	m	class:BadInput
Skeleton	Chapter_8/Quizzes/Monster/Monster.h	/^            Skeleton,$/;"	e	enum:Monster::MonsterType
Stack	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^class Stack {$/;"	c	file:
StudentGrades	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^        StudentGrades() {}$/;"	f	class:StudentGrades
StudentGrades	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^        StudentGrades(const std::string name, const char grade) $/;"	f	class:StudentGrades
StudentGrades	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^class StudentGrades {$/;"	c
TEN	Chapter_6/Quizzes/Quiz_5/card.h	/^	TEN,$/;"	e	enum:CardRank
TEN	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
THREE	Chapter_6/Quizzes/Quiz_5/card.h	/^	THREE,$/;"	e	enum:CardRank
THREE	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
TORCHES	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^		TORCHES,$/;"	e	enum:ItemTypes::ItemTypes	file:
TOTAL_NUM_CARDS	Chapter_8/Quizzes/Blackjack/Deck.h	/^        const int TOTAL_NUM_CARDS = 52;$/;"	m	class:Deck
TWO	Chapter_6/Quizzes/Quiz_5/card.h	/^	TWO, $/;"	e	enum:CardRank
TWO	Chapter_8/Quizzes/Blackjack/Card.h	/^            TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,$/;"	e	enum:Card::CardValue
Troll	Chapter_8/Quizzes/Monster/Monster.h	/^            Troll,$/;"	e	enum:Monster::MonsterType
VALID	Chapter_5/Quizzes/hi_lo_enums.h	/^        VALID,$/;"	m	class:Guess_Status
Vampire	Chapter_8/Quizzes/Monster/Monster.h	/^            Vampire,$/;"	e	enum:Monster::MonsterType
Zombie	Chapter_8/Quizzes/Monster/Monster.h	/^            Zombie,$/;"	e	enum:Monster::MonsterType
add	Chapter_1/Lectures/Headers/add.cpp	/^int add(int a, int b) {$/;"	f
add	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline int add(int a, int b) {$/;"	f
alpha	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		uint8_t red, green, blue, alpha;$/;"	m	class:RGBA	file:
approxEqual	Chapter_3/Lectures/floating_point_comparison.cpp	/^int approxEqual(double a, double b, double absEpsilon, double relEpsilon) {$/;"	f
bad_input	Chapter_7/Lectures/Function_Pointers/Calculator_Program/BadInput.h	2;"	d
binarySearch	Chapter_7/Quizzes/Binary_Search_Iterative/binary_search.cpp	/^int binarySearch(std::array<int> &num_list, int target) {$/;"	f
binarySearch	Chapter_7/Quizzes/Binary_Search_Recursive/binary_search.cpp	/^int binarySearch(std::vector<int> num_list, int target, int max, int min) {$/;"	f
blue	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		uint8_t red, green, blue, alpha;$/;"	m	class:RGBA	file:
bubbleSort	Chapter_6/Lectures/Sorting/Bubble_Sort/bubble_sort.cpp	/^void bubbleSort(int array[], int array_size) {$/;"	f
calcOp	Chapter_2/Quizzes/Question_3/question_3.cpp	/^double calcOp(const double a, const double b, const char op) {$/;"	f
card_h	Chapter_6/Quizzes/Quiz_5/card.h	2;"	d
card_rank	Chapter_6/Quizzes/Quiz_5/card.h	/^	int card_rank;$/;"	m	struct:Card
card_suit	Chapter_6/Quizzes/Quiz_5/card.h	/^	int card_suit;$/;"	m	struct:Card
color	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^		std::string color;$/;"	m	class:Ball	file:
constants	Chapter_2/Quizzes/Question_4/constants.h	/^namespace constants {$/;"	n
countTotalItems	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^int countTotalItems(int items_list[], int size) {$/;"	f
dealCard	Chapter_8/Quizzes/Blackjack/Deck.cpp	/^Card& Deck::dealCard() {$/;"	f	class:Deck
denominator	Chapter_4/Lectures/Structs/struct_defs.h	/^	double denominator;$/;"	m	struct:Fraction
distFallen	Chapter_2/Quizzes/Question_4/question_4.cpp	/^double distFallen() {$/;"	f
distanceFrom	Chapter_8/Quizzes/Point2d/Point2d.cpp	/^double distanceFrom(Point2d& p1, Point2d& p2) {$/;"	f
distanceTo	Chapter_8/Quizzes/Point2d/Point2d.cpp	/^double Point2d::distanceTo(const Point2d& point2) const {$/;"	f	class:Point2d
divide	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline int divide(int a, int b) {$/;"	f
error_type	Chapter_6/Quizzes/Quiz_2/error_type.h	2;"	d
exe	Chapter_1/Lectures/Headers/Makefile	/^exe = exe$/;"	m
exe	Chapter_1/Lectures/Hello_World/Makefile	/^exe = hello$/;"	m
exe	Chapter_1/Lectures/Simple_IO/Makefile	/^exe = io$/;"	m
exe	Chapter_1/Quizzes/Question_1/Makefile	/^exe = question_1$/;"	m
exe	Chapter_1/Quizzes/Question_2/Makefile	/^exe = question_2$/;"	m
exe	Chapter_2/Quizzes/Question_3/Makefile	/^exe = question_3$/;"	m
exe	Chapter_2/Quizzes/Question_4/Makefile	/^exe = question_4$/;"	m
exe	Chapter_4/Lectures/Scope_Duration_Linkage/Makefile	/^exe = linkage$/;"	m
exe	Chapter_4/Lectures/Strings/Makefile	/^exe = strings$/;"	m
exe	Chapter_4/Lectures/Structs/Makefile	/^exe = structs_exe$/;"	m
exe	Chapter_4/Quizzes/Makefile	/^exe = monster$/;"	m
exe	Chapter_5/Lectures/Enums_Switches/Makefile	/^exe = exe$/;"	m
factorial	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/factorial_iterative.cpp	/^int factorial(int x) {$/;"	f
factorial	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/factorial_recursive.cpp	/^int factorial(int x) {$/;"	f
fibonacci	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/fibonacci_iterative.cpp	/^int fibonacci(int x) {$/;"	f
fibonacci	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/fibonacci_recursive.cpp	/^int fibonacci(int x) {$/;"	f
generateMonster	Chapter_8/Quizzes/Monster/MonsterGenerator.cpp	/^Monster MonsterGenerator::generateMonster() {$/;"	f	class:MonsterGenerator
getAnimalName	Chapter_5/Lectures/Enums_Switches/enums_switches.cpp	/^std::string getAnimalName(Animal_t animal) {$/;"	f
getArithmeticFunction	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^std::function<int (int,int)> getArithmeticFunction (char op) {$/;"	f
getCard	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^std::string getCard(const Card card) {$/;"	f
getCardVal	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^int getCardVal(Card& card) {$/;"	f
getChar	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline char getChar() {$/;"	f
getDouble	Chapter_5/Lectures/Input_Validation/extra_input.cpp	/^double getDouble()$/;"	f
getDouble	Chapter_5/Lectures/Input_Validation/failed_extraction.cpp	/^double getDouble()$/;"	f
getDouble	Chapter_5/Lectures/Input_Validation/robust_program.cpp	/^double getDouble()$/;"	f
getGrade	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^		char& getGrade() { return m_grade; }$/;"	f	class:StudentGrades
getInteger	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline int getInteger() {$/;"	f
getMonsterTypeString	Chapter_4/Quizzes/monster.cpp	/^std::string getMonsterTypeString(Monster monster) {$/;"	f
getName	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^		std::string getName() const { return m_name; }$/;"	f	class:StudentGrades
getOperator	Chapter_5/Lectures/Input_Validation/robust_program.cpp	/^char getOperator()$/;"	f
getRandomNumber	Chapter_8/Quizzes/Blackjack/Deck.cpp	/^int Deck::getRandomNumber(int min, int max) {$/;"	f	class:Deck
getRandomNumber	Chapter_8/Quizzes/Monster/MonsterGenerator.cpp	/^int MonsterGenerator::getRandomNumber(int min, int max) {$/;"	f	class:MonsterGenerator
getSuit	Chapter_8/Quizzes/Blackjack/Card.h	/^        CardSuit getSuit() const { return m_suit; }$/;"	f	class:Card
getSuitString	Chapter_8/Quizzes/Blackjack/Card.cpp	/^char Card::getSuitString() const {$/;"	f	class:Card
getTowerHeight	Chapter_2/Quizzes/Question_4/question_4.cpp	/^double getTowerHeight() {$/;"	f
getTypeString	Chapter_8/Quizzes/Monster/Monster.cpp	/^std::string Monster::getTypeString() const {$/;"	f	class:Monster
getValidChoice	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^PlayerChoice getValidChoice(std::string& player_choice) {$/;"	f
getValue	Chapter_8/Quizzes/Blackjack/Card.h	/^        CardValue getValue() const { return m_value; }$/;"	f	class:Card
getValueString	Chapter_8/Quizzes/Blackjack/Card.cpp	/^char Card::getValueString() const {$/;"	f	class:Card
getX	Chapter_8/Quizzes/Point2d/Point2d.h	/^		double getX() const { return m_x; }$/;"	f	class:Point2d
getY	Chapter_8/Quizzes/Point2d/Point2d.h	/^		double getY() const { return m_y; }$/;"	f	class:Point2d
grade	Chapter_6/Quizzes/Quiz_2/quiz_2.h	/^	int grade;$/;"	m	struct:student
green	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		uint8_t red, green, blue, alpha;$/;"	m	class:RGBA	file:
health	Chapter_4/Quizzes/monster.h	/^	int health;$/;"	m	struct:Monster
hi_lo_constants_h	Chapter_5/Quizzes/hi_lo_constants.h	2;"	d
hi_lo_enums_h	Chapter_5/Quizzes/hi_lo_enums.h	2;"	d
inputStatus	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline BadInput inputStatus() {$/;"	f
inputStatus	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline BadInput inputStatus(char op) {$/;"	f
isPalindrome	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/is_palindrome_recursive.cpp	/^bool isPalindrome(std::string &str, int start, int end) {$/;"	f
m_deck	Chapter_8/Quizzes/Blackjack/Deck.h	/^        std::array<Card, 52> m_deck;$/;"	m	class:Deck
m_grade	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^        char m_grade = 'Z';$/;"	m	class:StudentGrades
m_hp	Chapter_8/Quizzes/Monster/Monster.h	/^        int m_hp = 0;$/;"	m	class:Monster
m_map	Chapter_9/Quizzes/GradeMap/GradeMap.h	/^        std::vector<StudentGrades> m_map;$/;"	m	class:GradeMap
m_name	Chapter_8/Quizzes/Monster/Monster.h	/^        std::string m_name = "";$/;"	m	class:Monster
m_name	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^        std::string m_name = "";$/;"	m	class:StudentGrades
m_roar	Chapter_8/Quizzes/Monster/Monster.h	/^        std::string m_roar = "";$/;"	m	class:Monster
m_string	Chapter_9/Quizzes/MyString/MyString.h	/^        std::string m_string = "";$/;"	m	class:MyString
m_suit	Chapter_8/Quizzes/Blackjack/Card.h	/^        CardSuit m_suit = DEFAULT_SUIT;$/;"	m	class:Card
m_top_card_i	Chapter_8/Quizzes/Blackjack/Deck.h	/^        int m_top_card_i = 0;$/;"	m	class:Deck
m_type	Chapter_8/Quizzes/Monster/Monster.h	/^        MonsterType m_type = MonsterType::NO_TYPE;$/;"	m	class:Monster
m_value	Chapter_8/Quizzes/Blackjack/Card.h	/^        CardValue m_value = DEFAULT_VALUE;$/;"	m	class:Card
m_x	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^		double m_x;$/;"	m	class:Point3d	file:
m_x	Chapter_8/Quizzes/Point2d/Point2d.h	/^		double m_x = 0.0;$/;"	m	class:Point2d
m_y	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^		double m_y;$/;"	m	class:Point3d	file:
m_y	Chapter_8/Quizzes/Point2d/Point2d.h	/^		double m_y = 0.0;$/;"	m	class:Point2d
m_z	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^		double m_z;$/;"	m	class:Point3d	file:
main	Chapter_1/Lectures/Headers/main.cpp	/^int main() {$/;"	f
main	Chapter_1/Lectures/Hello_World/hello_world.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	Chapter_1/Lectures/Hello_World/hello_world_2.cpp	/^int main() {$/;"	f
main	Chapter_1/Lectures/Simple_IO/io.cpp	/^int main() {$/;"	f
main	Chapter_1/Quizzes/Question_1/question_1.cpp	/^int main() {$/;"	f
main	Chapter_1/Quizzes/Question_2/question_2.cpp	/^int main() {$/;"	f
main	Chapter_2/Lectures/Static_Casting/static.cpp	/^int main() {$/;"	f
main	Chapter_2/Quizzes/Question_3/question_3.cpp	/^int main() {$/;"	f
main	Chapter_2/Quizzes/Question_4/question_4.cpp	/^int main() {$/;"	f
main	Chapter_4/Lectures/Scope_Duration_Linkage/linkage.cpp	/^int main() {$/;"	f
main	Chapter_4/Lectures/Strings/strings.cpp	/^int main() {$/;"	f
main	Chapter_4/Lectures/Structs/structs.cpp	/^int main() {$/;"	f
main	Chapter_4/Quizzes/monster.cpp	/^int main() {$/;"	f
main	Chapter_5/Lectures/Enums_Switches/enums_switches.cpp	/^int main() {$/;"	f
main	Chapter_5/Lectures/Input_Validation/robust_program.cpp	/^int main()$/;"	f
main	Chapter_5/Quizzes/hi_lo_game.cpp	/^int main() {$/;"	f
main	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^int main() {$/;"	f
main	Chapter_6/Lectures/For_Each_Loops/Example_Program/for_each_example.cpp	/^int main() {$/;"	f
main	Chapter_6/Lectures/Sorting/Bubble_Sort/bubble_sort.cpp	/^int main() {$/;"	f
main	Chapter_6/Lectures/Sorting/Selection_Sort/selection_sort.cpp	/^int main() {$/;"	f
main	Chapter_6/Quizzes/Quiz_1/quiz_1.cpp	/^int main() {$/;"	f
main	Chapter_6/Quizzes/Quiz_2/quiz_2.cpp	/^int main() {$/;"	f
main	Chapter_6/Quizzes/Quiz_3/quiz_3.cpp	/^int main() {$/;"	f
main	Chapter_6/Quizzes/Quiz_4/quiz_4.cpp	/^int main() {$/;"	f
main	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Factorial/Iterative_Version/factorial_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Factorial/Recursive_Version/factorial_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Fibonacci/Iterative_Version/fibonacci_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Fibonacci/Recursive_Version/fibonacci_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Is_Palindrome/Iterative_Version/is_palindrome_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Is_Palindrome/Recursive_Version/is_palindrome_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/reverse_digits_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/reverse_digits_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/reverse_string_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/reverse_string_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/sum_of_digits_iterative.cpp	/^int main() {$/;"	f
main	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/sum_of_digits_recursive.cpp	/^int main() {$/;"	f
main	Chapter_7/Quizzes/Binary_Search_Iterative/binary_search.cpp	/^int main() {$/;"	f
main	Chapter_7/Quizzes/Binary_Search_Recursive/binary_search.cpp	/^int main() {$/;"	f
main	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^int main() {$/;"	f
main	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^int main() {$/;"	f
main	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^int main() {$/;"	f
main	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^int main() {$/;"	f
main	Chapter_8/Quizzes/Blackjack/Main.cpp	/^int main() {$/;"	f
main	Chapter_8/Quizzes/Monster/Monster.cpp	/^int main() {$/;"	f
main	Chapter_8/Quizzes/Point2d/Point2d.cpp	/^int main() {$/;"	f
main	Chapter_9/Quizzes/GradeMap/Main.cpp	/^int main() {$/;"	f
main	Chapter_9/Quizzes/MyString/Main.cpp	/^int main() {$/;"	f
multiply	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline int multiply(int a, int b) {$/;"	f
mySwap	Chapter_6/Quizzes/Quiz_3/quiz_3.cpp	/^void mySwap(int& a, int& b) {$/;"	f
name	Chapter_4/Quizzes/monster.h	/^	std::string name;$/;"	m	struct:Monster
name	Chapter_6/Quizzes/Quiz_2/quiz_2.h	/^	std::string name;$/;"	m	struct:student
numerator	Chapter_4/Lectures/Structs/struct_defs.h	/^	double numerator;$/;"	m	struct:Fraction
objs	Chapter_1/Lectures/Headers/Makefile	/^objs = add.o main.o$/;"	m
objs	Chapter_1/Lectures/Hello_World/Makefile	/^objs = hello_world.o$/;"	m
objs	Chapter_1/Lectures/Simple_IO/Makefile	/^objs = io.o$/;"	m
objs	Chapter_1/Quizzes/Question_1/Makefile	/^objs = question_1.o$/;"	m
objs	Chapter_1/Quizzes/Question_2/Makefile	/^objs = question_2.o io.o$/;"	m
objs	Chapter_2/Quizzes/Question_3/Makefile	/^objs = question_3.o$/;"	m
objs	Chapter_2/Quizzes/Question_4/Makefile	/^objs = question_4.o$/;"	m
objs	Chapter_4/Lectures/Scope_Duration_Linkage/Makefile	/^objs = linkage.o constants.o$/;"	m
objs	Chapter_4/Lectures/Strings/Makefile	/^objs = strings.o$/;"	m
objs	Chapter_4/Lectures/Structs/Makefile	/^objs = structs.o$/;"	m
objs	Chapter_4/Quizzes/Makefile	/^objs = monster.o$/;"	m
objs	Chapter_5/Lectures/Enums_Switches/Makefile	/^objs = enums_switches.o$/;"	m
operator ()	Chapter_9/Quizzes/MyString/MyString.cpp	/^std::string MyString::operator() (int start_i, int num_chars) {$/;"	f	class:MyString
operator []	Chapter_9/Quizzes/GradeMap/GradeMap.cpp	/^char& GradeMap::operator[] (const std::string& name) {$/;"	f	class:GradeMap
pass_by_reference	Chapter_4/Lectures/Structs/structs.cpp	/^Fraction* pass_by_reference(Fraction* frac_ptr) {$/;"	f
pass_by_value	Chapter_4/Lectures/Structs/structs.cpp	/^Fraction pass_by_value(Fraction frac) {$/;"	f
playBlackjack	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^void playBlackjack(std::array<Card,52>& card_deck) {$/;"	f
pop	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^		int pop() {$/;"	f	class:Stack
print	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^		void print() {$/;"	f	class:Point3d
print	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^		void print() {$/;"	f	class:Stack
print	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^		void print() {$/;"	f	class:Ball
print	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		void print() {$/;"	f	class:RGBA
print	Chapter_8/Quizzes/Monster/Monster.cpp	/^void Monster::print() const {$/;"	f	class:Monster
print	Chapter_8/Quizzes/Point2d/Point2d.cpp	/^void Point2d::print() const {$/;"	f	class:Point2d
printArray	Chapter_6/Lectures/Sorting/Bubble_Sort/bubble_sort.cpp	/^void printArray(int array[], int array_size) {$/;"	f
printCard	Chapter_8/Quizzes/Blackjack/Card.cpp	/^void Card::printCard() const {$/;"	f	class:Card
printDeck	Chapter_8/Quizzes/Blackjack/Deck.cpp	/^void Deck::printDeck() const {$/;"	f	class:Deck
printMonster	Chapter_4/Quizzes/monster.cpp	/^void printMonster(Monster monster) {$/;"	f
printMyString	Chapter_6/Quizzes/Quiz_4/quiz_4.cpp	/^void printMyString(const char* str) {$/;"	f
printNameList	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^void printNameList (std::string* name_list, int total_names) {$/;"	f
printNumberOfLegs	Chapter_5/Lectures/Enums_Switches/enums_switches.cpp	/^void printNumberOfLegs(Animal_t animal) {$/;"	f
printResult	Chapter_2/Quizzes/Question_4/question_4.cpp	/^void printResult(double new_height) {$/;"	f
printResult	Chapter_5/Lectures/Input_Validation/meaningless_input.cpp	/^void printResult(double x, char op, double y)$/;"	f
printResult	Chapter_5/Lectures/Input_Validation/robust_program.cpp	/^void printResult(double x, char op, double y)$/;"	f
push	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^		bool push(int num) {$/;"	f	class:Stack
radius	Chapter_8/Lectures/Constructors/Ball/Ball.cpp	/^		double radius;$/;"	m	class:Ball	file:
readNumber	Chapter_1/Quizzes/Question_1/question_1.cpp	/^int readNumber() {$/;"	f
readNumber	Chapter_1/Quizzes/Question_2/io.cpp	/^int readNumber() {$/;"	f
red	Chapter_8/Lectures/Constructors/RGBA/RGBA.cpp	/^		uint8_t red, green, blue, alpha;$/;"	m	class:RGBA	file:
reset	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^		void reset() {$/;"	f	class:Stack
reverseDigits	Chapter_7/Lectures/Recursion/Reverse_Digits/Iterative_Version/reverse_digits_iterative.cpp	/^void reverseDigits(int &num) {$/;"	f
reverseDigits	Chapter_7/Lectures/Recursion/Reverse_Digits/Recursive_Version/reverse_digits_recursive.cpp	/^void reverseDigits(int num) {$/;"	f
reverseString	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/reverse_string_iterative.cpp	/^void reverseString(std::string &str) {$/;"	f
reverseString	Chapter_7/Lectures/Recursion/Reverse_String/Recursive_Version/reverse_string_recursive.cpp	/^void reverseString(std::string str) {$/;"	f
runGame	Chapter_5/Quizzes/hi_lo_game.cpp	/^void runGame(Guess_Status* guess_status) {$/;"	f
selectionSort	Chapter_6/Quizzes/Quiz_2/quiz_2.cpp	/^void selectionSort(student* student_list, int num_students) {$/;"	f
setName	Chapter_9/Quizzes/GradeMap/StudentGrades.h	/^		void setName(const std::string& name) { m_name = name; }$/;"	f	class:StudentGrades
setSuit	Chapter_8/Quizzes/Blackjack/Card.h	/^        void setSuit(CardSuit suit) { m_suit = suit; }$/;"	f	class:Card
setValue	Chapter_8/Quizzes/Blackjack/Card.h	/^        void setValue(CardValue value) { m_value = value; }$/;"	f	class:Card
setValues	Chapter_8/Lectures/Access_Specifiers/Point3d/Point3d.cpp	/^		void setValues(double x, double y, double z) {$/;"	f	class:Point3d
setX	Chapter_8/Quizzes/Point2d/Point2d.h	/^		void setX(double x) { m_x = x; }$/;"	f	class:Point2d
setY	Chapter_8/Quizzes/Point2d/Point2d.h	/^		void setY(double y) { m_y = y; }$/;"	f	class:Point2d
shuffleDeck	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^void shuffleDeck(std::array<Card,52>& card_deck) {$/;"	f
shuffleDeck	Chapter_8/Quizzes/Blackjack/Deck.cpp	/^void Deck::shuffleDeck() {$/;"	f	class:Deck
sortNames	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^void sortNames(std::string* names_list, int total_names) {$/;"	f
stack_length	Chapter_8/Lectures/Access_Specifiers/Stack/stack.cpp	/^		int stack_length = 0;$/;"	m	class:Stack	file:
student	Chapter_6/Quizzes/Quiz_2/quiz_2.h	/^struct student {$/;"	s
subtract	Chapter_7/Lectures/Function_Pointers/Calculator_Program/function_pointers.cpp	/^inline int subtract(int a, int b) {$/;"	f
sumOfDigits	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Iterative_Version/sum_of_digits_iterative.cpp	/^int sumOfDigits(int x) {$/;"	f
sumOfDigits	Chapter_7/Lectures/Recursion/Sum_Of_Digits/Recursive_Version/sum_of_digits_recursive.cpp	/^int sumOfDigits(int x) {$/;"	f
swap	Chapter_7/Lectures/Recursion/Reverse_String/Iterative_Version/reverse_string_iterative.cpp	/^void swap(char &a, char &b) {$/;"	f
swapCard	Chapter_8/Quizzes/Blackjack/Deck.cpp	/^void Deck::swapCard(Card& a, Card& b) {$/;"	f	class:Deck
swapCards	Chapter_6/Quizzes/Quiz_5/quiz_5.cpp	/^void swapCards(Card& a, Card& b) {$/;"	f
testBadInput	Chapter_5/Quizzes/hi_lo_game.cpp	/^Guess_Status testBadInput() {$/;"	f
testBadInput	Chapter_6/Lectures/Dynamic_Memory/Selection_Sort/sort_sizeless_list.cpp	/^ErrorType testBadInput() {$/;"	f
testBadInput	Chapter_6/Quizzes/Quiz_2/quiz_2.cpp	/^ErrorType testBadInput(int input) {$/;"	f
type	Chapter_4/Quizzes/monster.h	/^	Monster_t type;$/;"	m	struct:Monster
writeAnswer	Chapter_1/Quizzes/Question_1/question_1.cpp	/^void writeAnswer(int ans) {$/;"	f
writeAnswer	Chapter_1/Quizzes/Question_2/io.cpp	/^void writeAnswer(int ans) {$/;"	f
